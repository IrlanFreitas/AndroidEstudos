Executando o servidor

Agora que sabemos que a forma para guardar as informações do usuário com segurança é enviando para um servidor, vamos então executar a aplicação Spring Boot que é uma aplicação web que vai simular um servidor online que permite o envio das informações da nossa App.

Essa aplicação é um arquivo jar executável. Caso esteja em ambiente Linux ou Mac abra o terminal, ou então, se for Windows, abra o CMD. Em seguida, navegue até o diretório que esteja localizado o arquivo server.jar (Lembrando que ele está dentro do diretório server que faz parte dos arquivos que foram extraídos!).

Caso tenha interesse de aprender mais sobre o Spring Boot, temos o Curso Spring Boot: Agilidade no desenvolvimento java com Spring disponível aqui na Alura:

Pré-requisitos
O servidor foi desenvolvido na versão 8 do Java, portanto, é recomendável que utilize essa versão para que funcione corretamente.

Executando o arquivo jar
Para executar o arquivo jar basta apenas usar o comando java -jar server.jar. Observe que aparecerá um monte de log do Spring Boot, não se preocupe, esse log é justamente todos os passos que ele está realizando para subir a aplicação!

Testando a aplicação web
Após o Spring Boot parar com o log aparecerá uma mensagem no final com o seguinte conteúdo:

Log da aplicação spring boot

Isso significa que a aplicação rodou com sucesso. Logo acima, aparecerá também a seguinte mensagem: Tomcat started on port(s): 8080 (http), essa mensagem nos indica que podemos acessar a aplicação por meio do protocolo HTTP e pela porta 8080. Em outras palavras, basta apenas acessar a URL http://localhost:8080/. Veja se aparece a aplicação web conforme visto em aula. Se tudo deu certo podemos prosseguir.

Observações: Caso esteja rodando um servidor de aplicação na porta 8080, ou então, qualquer outro processo que faça uso da porta 8080, a aplicação Spring Boot não conseguirá subir! Em outras palavras, finalize qualquer processo que esteja utilizando esta porta. Após finalização, execute novamente o servidor por meio do comando java -jar server.jar. Lembrando que se tentar executar esta aplicação duas vezes, a segunda vez não subirá, pois a primeira já está utilizando a porta 8080!