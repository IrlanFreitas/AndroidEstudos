Activies são semelhantes ao comportamento da tela (Seriam como manageds beans).
Essa activities tem ciclos de vida, e são importantes para o funcionamento.

Diretório R (Resources) - Recursos do Android, classe R, gerada automaticamente para que se possa
acessar os arquivos.

Layout (Arquivo.xml) - Arquivos relacionados ao design da tela.

Dúvidas sobre o Funcionamento do Gradle (Inicialmente sei que é programavel e similiar ao Maven no gerenciamento de dependências).

findViewById(R.id.listaAlunos) - Método herdado pelo AppCompatActivity necessário para encontrar os elementos da View e utiliza-lo
no código java(do xml para o java) e poder manipular.

Relacionado ao Layout.xml:

	Playlist somente sobre Layout: https://www.youtube.com/watch?v=2b18zJmkKKU&list=PLBA57K2L2RIIfuOmp9T4YL0Sjpnvg-DH3

	wrap_content: Constante do xml que indica envolver o conteúdo, o elemento ficará do tamanho do elemento que está dentro.

	match_parent: Constante do xml que indica que o tamanho será herdado do elemento pai, quando se é o ultimo elemento com essa constante
	ele irá herdar a largura da tela.

	RelativeLayout, LinearLayout, ConstraintLayout são alguns do layout responsáveis para dispor os elementos na tela cada um a sua forma.


Adapters: São utilizados para converter dados em elementos de layout como textview's sem que seja feito o código de uma lista inteira na mão


Unidade de Medidas:
	
	Link: https://pt.stackoverflow.com/questions/295/qual-a-diferen%C3%A7a-entre-px-dp-dip-and-sp
	
	Wrap_Content, Match_Parent, Dp, Px
	
AndroidManifest.xml - Arquivo de configuração geral do app, intent-filter, permissões, indicações de activities.

Tratando os eventos de click:

	Necessário obter uma instancia do elemento, que poder ser botão, item da lista etc.

	Button btnSalvar = findViewById(R.id.formulario_btn_salvar);

	//Necessário uma classe anônima
	btnSalvar.setOnClickListener(new View.OnClickListener() {
				
				//Sobrescrevendo o método de click com alguma ação
				@Override
				public void onClick(View view) {
					aluno = obterDados();
					Toast.makeText(view.getContext(), aluno.toString(), Toast.LENGTH_SHORT).show();
				}
			})
		
		
Modificação de LinearLayout para RelativeLayout na tela de Listar Alunos para que os elementos
sejam colocados em referencia de posição um ao outro.

Intent: {
	Link: https://www.youtube.com/watch?v=2b18zJmkKKU&list=PLBA57K2L2RIIfuOmp9T4YL0Sjpnvg-DH3
	Classe e indica que se quer fazer algo, utilizar algum recurso do android, ir para outra Activity...
}

Inflate: {
	Link: http://blog.caelum.com.br/conhecendo-melhor-o-metodo-inflate/
}

Views: {
	Link: https://youtu.be/2b18zJmkKKU?list=PLBA57K2L2RIIfuOmp9T4YL0Sjpnvg-DH3
}


Ciclo de Vida das Activies {

	Links: 
		https://www.devmedia.com.br/entendendo-o-ciclo-de-vida-de-uma-aplicacao-android/22922
		https://developer.android.com/guide/components/activities?hl=pt-br
		https://developer.android.com/training/basics/activity-lifecycle/?hl=pt-br
}


